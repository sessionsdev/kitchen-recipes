version: '3.7'

services:
  server:
   build:
     context: ./services/api/recipe-api
     dockerfile: Dockerfile
     args:
       DEBUG_ARGS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5080
   ports:
     - 8080:8080
     - 5080:5080
   links:
     - api-database 
   depends_on:
     - api-database
   hostname: localhost
   restart: unless-stopped
   networks:
     - backend
     - frontend

  client:
    build:
      context: ./services/client/recipe-client
      dockerfile: Dockerfile
    container_name: recipe-client
    volumes:
      # App
      - "./services/client/recipe-client/src/:/app/src/"
      - "./services/client/recipe-client/public/img:/app/public/img"
      - "./services/client/recipe-client/public/index.html:/app/public/index.html"
      # Root Config Files
      - "./services/client/recipe-client/rollup.config.js:/app/rollup.config.js"
      - "./services/client/recipe-client/tailwind.config.js:/app/tailwind.config.js"
      - "./services/client/recipe-client/postcss.config.js:/app/postcss.config.js"
      - "./services/client/recipe-client/package.json:/app/package.json"
      - "./services/client/recipe-client/package-lock.json:/app/package-lock.json"
    hostname: localhost
    ports:
      - 5000:5000
    networks:
      - frontend

  api-database:
    image: mongo:5.0
    container_name: api-database
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: recipes
    ports:
      - 27017:27017
    volumes:
      - ./services/database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongodb-data:/data/db
    networks:
      - backend

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: api-database
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password
    volumes:
      - mongodb-data:/data/db
    depends_on:
      - api-database
    networks:
      - backend
    ports:
      - 8081:8081
    restart: unless-stopped

volumes:
  mongodb-data:
    name: mongodb-data

networks:
  frontend:
    name: frontend
  backend:
    name: backend